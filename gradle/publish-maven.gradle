apply plugin: "propdeps-maven"

install {
	repositories.mavenInstaller {
		customizePom(pom, project)
	}
}

task generatePom {
	description = 'Generates a Maven pom.xml'

	onlyIf { install.enabled }

	def sep = System.getProperty "line.separator"
	
	def pomFile = file("${buildDir}/resources/main/META-INF/maven/${project.group}/${project.name}/pom.xml")
	doLast() {
		def p = pom {}
		customizePom(p, project)
		p.writeTo(pomFile)
	}
}

task generateProp {
	description = 'Generates a Maven pom.properties'
	
	onlyIf { install.enabled }
	
	def sep = System.getProperty "line.separator"
	
	def pomProp = file("${buildDir}/resources/main/META-INF/maven/${project.group}/${project.name}/pom.properties")
	def date = new Date()
	doLast() {
		pomProp.withWriter {
			it << '#Generated by Gradle publish-maven.gradle' + sep
			it << "#${date}" + sep
			it << "version=$project.version" + sep
			it << "groupId=$project.group" + sep
			it << "artifactId=$project.name" + sep
		}
	}

}

build.dependsOn generatePom, generateProp
install.dependsOn generatePom, generateProp


def customizePom(pom, gradleProject) {
	pom.whenConfigured { generatedPom ->

		// eliminate test-scoped dependencies (no need in maven central poms)
		generatedPom.dependencies.removeAll { dep ->
			dep.scope == "test"
		}

		// sort to make pom dependencies order consistent to ease comparison of older poms
		generatedPom.dependencies = generatedPom.dependencies.sort { dep ->
			"$dep.scope:$dep.groupId:$dep.artifactId"
		}

		// add all items necessary for maven central publication
		generatedPom.project {
			name = gradleProject.description
			description = gradleProject.description
			url = linkScmUrl
			licenses {
				license {
					name "The Apache Software License, Version 2.0"
					url "http://www.apache.org/licenses/LICENSE-2.0.txt"
					distribution "repo"
				}
			}
			scm {
				url = linkScmUrl
			}
			developers {
				authors.each{ author -> 
					developer {
						id = "$author.id"
						name = "$author.name"
						email = "$author.email"
					}
				}
			}
		}

	}
}