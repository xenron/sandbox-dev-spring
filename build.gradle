apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'

apply plugin: 'maven'
apply plugin: 'maven-publish'

apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'project-report'

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

dependencies {
  compile group: 'commons-collections', name: 'commons-collections', version: '3.2.2'

  compile("org.springframework:spring-context:${springVersion}")
  compile("org.springframework:spring-context-support:${springVersion}")
  compile("org.springframework:spring-aop:${springVersion}")
  compile("org.springframework:spring-aspects:${springVersion}")
  compile("org.springframework:spring-tx:${springVersion}")
  compile("org.springframework:spring-jdbc:${springVersion}")
  compile("org.springframework:spring-orm:${springVersion}")
  compile("org.springframework:spring-web:${springVersion}"){
    exclude group: 'commons-logging', module: 'commons-logging'
  }
  compile("org.springframework:spring-webmvc:${springVersion}"){
    exclude group: 'commons-logging', module: 'commons-logging'
  }
  compile("org.springframework:spring-websocket:${springVersion}"){
    exclude group: 'commons-logging', module: 'commons-logging'
  }

  // testCompile group: 'junit', name: 'junit', version: '4.+'
  testCompile("junit:junit:${junitVersion}")
  testCompile("org.hamcrest:hamcrest-all:${hamcrestVersion}")
  testCompile("org.mockito:mockito-core:${mockitoVersion}"){
    exclude group:'org.hamcrest', module:'hamcrest-core'
  }
  testCompile("org.powermock:powermock-module-junit4:${powermockVersion}"){
    exclude group:'org.javassist', module:'javassist'
  }
  testCompile("org.powermock:powermock-api-mockito:${powermockVersion}"){
    exclude group:'org.mockito', module:'mockito-all'
  }
  testCompile("org.springframework:spring-test:${springVersion}"){
    exclude group: 'commons-logging', module: 'commons-logging'
  }
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
